# act like vim
setw -g mode-keys vi

unbind C-b
set -g prefix C-o

# copy with 'enter' or 'y' and send to mac os clipboard: http://goo.gl/2Bfn8
# unbind -t vi-copy Enter
# bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"
# bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# create 'v' alias for selecting text
bind-key -t vi-copy v begin-selection

# paste
unbind C-p
bind C-p paste-buffer

# window splitting
unbind %
bind | split-window -h -c '#{pane_current_path}'
unbind '"'
bind _ split-window -v -c '#{pane_current_path}'

# quickly switch panes
unbind ^J
bind ^J select-pane -t :.+

# Status bar, found here:
# https://github.com/chrishunt/dot-files/blob/master/.tmux.conf

# enable UTF-8 support in status bar
set -g status-utf8 on

# set refresh interval for status bar
set -g status-interval 30

# center the status bar
set -g status-justify left

# show hostname, date, time
set-option -g status-right '#[fg=colour243]#H#[default] %h %a %d %I:%M '

setw -g aggressive-resize on
set-option -g history-limit 90000
set -g base-index 1
set -g pane-base-index 1

# Allows for faster key repetition
set -s escape-time 0

# Base16 theme found here
# https://github.com/chrishunt/color-schemes
# TODO: iTerm needs to be set up per the instructions
# at URL above. Figure out how to get this automated.
# NOTE: Tweaked the colors to use a gray instead of green
set -g status-bg colour235
set -g status-fg white

set-window-option -g window-status-current-fg black
set-window-option -g window-status-current-bg colour243
set-window-option -g window-status-activity-fg colour237
set-window-option -g window-status-activity-bg black

set -g pane-border-fg colour235
set -g pane-border-bg black
set -g pane-active-border-fg colour243
set -g pane-active-border-bg black

# highlight window when it has new activity
setw -g monitor-activity on
set -g visual-activity on

# re-number windows when one is closed
set -g renumber-windows on

# smart pane switching with awareness of vim splits
# From https://robots.thoughtbot.com/seamlessly-navigate-vim-and-tmux-splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"

# some nice session trix
# from https://gist.github.com/andreyvit/2921703
bind-key -n M-8 choose-session
bind-key -n M-9 switch-client -p
bind-key -n M-0 switch-client -n
