# connect to xserver on host (WSL specific)
# export WSL_HOST_IP=$(cat /etc/resolv.conf | grep nameserver | awk '{print $2; exit;}')
# export DISPLAY=${WSL_HOST_IP}:0.0
# WORKS FOR WSL1
export DISPLAY=127.0.0.1:0.0
# some fucking bullshit about WSL not working correctly with webpack dev server (seen when playing with braid and/or playroom)
# export PATH=$PATH:/mnt/c/Windows/System32
# misc places we keep binaries
export PATH=$HOME/local/bin:$PATH
# pip uses this when you install with --use
# export PATH=$HOME/.local/bin:$PATH
# export PATH=/usr/local/bin:$PATH
# tmuxifier
# export PATH="$HOME/.tmuxifier/bin:$PATH"
# google sdk
# export PATH="$HOME/local/google-cloud-sdk/bin:$PATH"
# yarn
# if [ $commands[yarn] ]; then
#   export PATH="$PATH:`yarn global bin`"
# fi

# export PATH=`echo $PATH | tr ':' '\n' | awk '($0!~/mnt\/c/) {print} ' | tr '\n' ':'`

# # set DISPLAY to use X terminal in WSL
# # in WSL2 the localhost and network interfaces are not the same than windows
# if grep -q WSL2 /proc/version; then
#     # execute route.exe in the windows to determine its IP address
#     DISPLAY=$(route.exe print | grep 0.0.0.0 | head -1 | awk '{print $4}'):0.0

# else
#     # In WSL1 the DISPLAY can be the localhost address
#     if grep -q icrosoft /proc/version; then
#         DISPLAY=127.0.0.1:0.0
#     fi
# fi
